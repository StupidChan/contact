<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  <display-name>newssm</display-name>
  
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
  
    <!-- 第一步：配置Springmvc核心控制器 
	     servlet主要就是处理页面传过来的表单数据,页面上的form的action指向到web.xml中,
	           然后在XML中对称节点中找到对应的servlet类去执行你的处理方法.-->
	<servlet>
		<servlet-name>spring_mvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springmvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup><!-- 立马启动servlet -->
	</servlet>
	
	<!-- 第一步：servlet-mapping主要是截获请求的，  
  		 如果你的url－pattern定义的是路径，那么以后所有对这个路径下资源的请求都会由servlet－name中定义的servlet处理；  
  		 如果你的url－pattern定义的是资源格式例如*.do等，那么对于所有符合这种格式的资源的请求都由指定的servlet处理。 -->
	<servlet-mapping>
		<servlet-name>spring_mvc</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!-- 加载Spring容器配置 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- 设置Spring容器加载配置文件路径 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:springContext.xml</param-value>
	</context-param>
	
	<!-- 由Spring载入的Log4j配置文件位置 -->
	<context-param>
	       <param-name>log4jConfigLocation</param-name>
	       <param-value>classpath:log4j.properties</param-value>
	</context-param>
	<!-- Spring默认刷新Log4j配置文件的间隔,单位为millisecond -->
	<context-param>
	       <param-name>log4jRefreshInterval</param-name>
	       <param-value>60000</param-value>
	</context-param>
	
	<!-- Web 项目 Spring 加载 Log4j 的监听  -->
	<listener> 
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class> 
	</listener>
	
	<!-- 乱码过滤器 -->
	<filter>  
        <filter-name>encodingFilter</filter-name>  
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
        <async-supported>true</async-supported>  
        <init-param>  
            <param-name>encoding</param-name>  
            <param-value>UTF-8</param-value>  
        </init-param>  
    </filter>
    <filter-mapping>  
		<span style="white-space:pre"></span>
		<filter-name>encodingFilter</filter-name>  
		<span style="white-space:pre"></span>
		<url-pattern>/*</url-pattern>  
		<span style="white-space:pre"></span>
	</filter-mapping>  
</web-app>